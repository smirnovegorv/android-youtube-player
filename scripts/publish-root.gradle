apply from: './dependencies.gradle'

// Create variables with empty default values
ext["sonatypeUsername"] = ''
ext["sonatypePassword"] = ''
ext["sonatypeStagingProfileId"] = ''
ext["signing.keyId"] = ''
ext["signing.password"] = ''
ext["signing.key"] = ''
ext["snapshot"] = ''

File secretPropsFile = project.rootProject.file('local.properties')
if (secretPropsFile.exists()) {
    // Read local.properties file first if it exists
    Properties p = new Properties()
    new FileInputStream(secretPropsFile).withCloseable { is -> p.load(is) }
    p.each { name, value -> ext[name] = value }
} else {
    // Use system environment variables
    ext["sonatypeUsername"] = System.getenv('OSSRH_USERNAME')
    ext["sonatypePassword"] = System.getenv('OSSRH_PASSWORD')
    ext["sonatypeStagingProfileId"] = System.getenv('SONATYPE_STAGING_PROFILE_ID')
    ext["signing.keyId"] = System.getenv('SIGNING_KEY_ID')
    ext["signing.password"] = System.getenv('SIGNING_PASSWORD')
    ext["signing.key"] = System.getenv('SIGNING_KEY')
    ext["snapshot"] = System.getenv('SNAPSHOT')
}

if (snapshot) {
    ext["rootVersionName"] = "$versions.publishVersion_core" +"-SNAPSHOT"
} else {
    ext["rootVersionName"] = "$versions.publishVersion_core"
}

// Set up Sonatype repository
nexusPublishing {
    packageGroup = 'com.pierfrancescosoffritti.androidyoutubeplayer'
    repositories {
        sonatype {
            nexusUrl.set(uri("https://ossrh-staging-api.central.sonatype.com/service/local/"))
            snapshotRepositoryUrl.set(uri("https://central.sonatype.com/repository/maven-snapshots/"))

            stagingProfileId = sonatypeStagingProfileId
            username = sonatypeUsername
            password = sonatypePassword
            version = rootVersionName
        }
    }
}